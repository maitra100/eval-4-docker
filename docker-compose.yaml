version: "3"
services:
  redis:
    image: redis
    restart: always
    ports:
      - "6380:6379"
  authdb:
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: users
      NODE_ENV: docker
    ports:
      - "5433:5432"
  backenddb:
    container_name: backenddb
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: backendDB
      NODE_ENV: docker
    ports:
      - "5434:5432"
  auth-migration:
    build:
      context: ../Evaluation-4-auth/
      dockerfile: Dockerfile.migrations
    environment:
      NODE_ENV: docker
    depends_on:
      - authdb
      - redis
  auth-service:
    build: ../Evaluation-4-auth/
    restart: always
    depends_on:
      - authdb
      - redis
      - auth-migration
    ports:
      - "8080:8080"
    environment:
      NUMBER_OF_SALTS_ROUNDS: 10
      SECRET_KEY: secret-key
      NODE_ENV: docker
      PORT: 8080
  backend-migration:
    build:
      context: ../Evaluation-4-backendService/
      dockerfile: Dockerfile.migrations
    environment:
      NODE_ENV: docker
    depends_on:
      - backenddb
      - redis
  backend-server:
    build: ../Evaluation-4-backendService
    restart: always
    depends_on:
      - auth-service
      - backend-migration
    ports:
      - "8081:8081"
    environment:
      NODE_ENV: docker
      AUTH_URL: docker.for.mac.localhost
      PORT: 8081